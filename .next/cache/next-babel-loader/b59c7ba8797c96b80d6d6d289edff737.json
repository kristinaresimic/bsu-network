{"ast":null,"code":"var _jsxFileName = \"/home/milos/KRISTINA/bsu-network-redesign/components/ModalComponents/User.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\"; // import PhoneInput from \"react-phone-number-input\";\n\nimport DatePicker from \"react-datepicker\"; // import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\n\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\nexport const User = () => {\n  const {\n    firstName,\n    lastName,\n    email,\n    residence,\n    gender,\n    phone,\n    date,\n    identyImg,\n    addressImg,\n    setLastName,\n    setFirstName,\n    setEmail,\n    setResidence,\n    setGender,\n    setPhone,\n    setDate,\n    setIdentyImg,\n    setAddressImg\n  } = useContext(DataContext);\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"en\");\n  const {\n    0: firstNameError,\n    1: setFirstNameError\n  } = useState(\"\");\n  const {\n    0: lastNameError,\n    1: setLastNameError\n  } = useState(\"\"); //email state\n  // const [email, setEmail] = useState(\"\");\n\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(\"\");\n  const {\n    0: residenceError,\n    1: setResidenceError\n  } = useState(\"\");\n  const {\n    0: genderError,\n    1: setGenderError\n  } = useState(\"\");\n  const {\n    0: phoneError,\n    1: setPhoneError\n  } = useState(\"\"); //date state\n\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(\"\");\n  const {\n    0: dateError,\n    1: setDateError\n  } = useState(\"\"); //identity image state\n  //address image state\n\n  const emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const checkInput = input => {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n\n        break;\n\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n\n        break;\n\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n\n        break;\n\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n\n        break;\n\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n\n        break;\n\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n\n        break;\n\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n\n        break;\n    }\n  };\n\n  const createDate = () => {\n    // setDate(date);\n    const date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return __jsx(\"div\", {\n    className: \"user \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(\"h5\", {\n    className: \"h5 fw-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"1. Basic Details:\"), __jsx(\"div\", {\n    className: \"ml-1 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"p1 fw-500 col-xl-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \" \", \"Please provide the following details and documents in order to complete the KYC process.\", \" \"), __jsx(\"div\", {\n    className: \"row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    onBlur: () => checkInput(\"firstName\"),\n    type: \"text\",\n    placeholder: \"First Name\",\n    className: `user-inp ${firstNameError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    onBlur: () => checkInput(\"lastName\"),\n    type: \"text\",\n    placeholder: \"Last Name\",\n    className: `user-inp ${lastNameError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    onBlur: () => checkInput(\"email\"),\n    type: \"text\",\n    placeholder: \"E - mail\",\n    className: `user-inp ${emailError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: residence,\n    onChange: e => setResidence(e.target.value),\n    onBlur: () => checkInput(\"residence\"),\n    type: \"text\",\n    placeholder: \"Current Residence\",\n    className: `user-inp ${residenceError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(\"select\", {\n    value: gender,\n    onChange: e => setGender(e.target.value),\n    onBlur: () => checkInput(\"gender\"),\n    className: `user-inp ${genderError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \" \", \"Gender\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \" \", \"Male\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"female\",\n    value: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Female\")), __jsx(PhoneInput, {\n    country: \"rs\" //initial country\n    ,\n    value: phone,\n    onChange: phone => setPhone(phone),\n    onBlur: () => checkInput(\"phone\"),\n    containerClass: `user-phone ${phoneError && \"border-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`,\n    inputClass: \"input\",\n    dropdownClass: \"country-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: `  ${dateError && \"border-error\"} user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 14\n    }\n  }, \" \", __jsx(DatePicker, {\n    className: \"user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3\",\n    placeholderText: \"Date of Birth\",\n    selected: date ? date : createDate(),\n    onChange: date => {\n      setDate(date);\n      checkInput(\"date\");\n    },\n    maxDate: createDate(),\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    yearDropdownItemNumber: 85,\n    scrollableYearDropdown: true,\n    placeholderText: \"Date of Birth\",\n    onCalendarClose: () => checkInput(\"date\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 22\n    }\n  })), __jsx(DatePicker, {\n    className: \"user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3\",\n    placeholderText: \"Date of Birth\",\n    selected: date ? date : createDate(),\n    onChange: date => {\n      setDate(date);\n      checkInput(\"date\");\n    },\n    maxDate: createDate(),\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    yearDropdownItemNumber: 85,\n    scrollableYearDropdown: true,\n    placeholderText: \"Date of Birth\",\n    onCalendarClose: () => checkInput(\"date\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }))))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"user-proof row mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, __jsx(UserProof, {\n    img: identyImg,\n    setImg: img => setIdentyImg(img),\n    checkboxName: \"identity\",\n    heading: \"2. Proof of identity\",\n    p1: \" Upload one of the following documents: ID, Passport or Driving licence.\",\n    p2: \" The document must include your: Full name, date of birth and a photo of yourself.\",\n    p3: \" The photo should be clear and focused.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }), __jsx(UserProof, {\n    img: addressImg,\n    setImg: img => setAddressImg(img),\n    checkboxName: \"address\",\n    heading: \"3. Proof of address\",\n    p1: \" Upload one of the following documents: bank statement or utility bill.\",\n    p2: \" Document must include your full name, adress and date.\",\n    p3: \" Must be within 3 months from the current date.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/milos/KRISTINA/bsu-network-redesign/components/ModalComponents/User.js"],"names":["React","useState","useContext","DatePicker","UserProof","PhoneInput","DataContext","createPopper","User","firstName","lastName","email","residence","gender","phone","date","identyImg","addressImg","setLastName","setFirstName","setEmail","setResidence","setGender","setPhone","setDate","setIdentyImg","setAddressImg","value","setValue","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","residenceError","setResidenceError","genderError","setGenderError","phoneError","setPhoneError","startDate","setStartDate","dateError","setDateError","emailReg","checkInput","input","test","toLowerCase","length","createDate","Date","setFullYear","getFullYear","e","target","img"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n// import PhoneInput from \"react-phone-number-input\";\nimport DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\n\nexport const User = () => {\n  const {\n    firstName,\n    lastName,\n    email,\n    residence,\n    gender,\n    phone,\n    date,\n    identyImg,\n    addressImg,\n    setLastName,\n    setFirstName,\n    setEmail,\n    setResidence,\n    setGender,\n    setPhone,\n    setDate,\n    setIdentyImg,\n    setAddressImg,\n  } = useContext(DataContext);\n\n  const [value, setValue] = useState(\"en\");\n\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  //email state\n  // const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [residenceError, setResidenceError] = useState(\"\");\n  const [genderError, setGenderError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n\n  //date state\n  const [startDate, setStartDate] = useState(\"\");\n  const [dateError, setDateError] = useState(\"\");\n\n  //identity image state\n\n  //address image state\n\n  const emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const checkInput = (input) => {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n        break;\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n        break;\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n        break;\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n        break;\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n        break;\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n        break;\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n        break;\n    }\n  };\n\n  const createDate = () => {\n    // setDate(date);\n    const date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return (\n    <div className='user '>\n      <div className='mt-5'>\n        <h5 className='h5 fw-700'>1. Basic Details:</h5>\n        <div className='ml-1 '>\n          <p className='p1 fw-500 col-xl-6'>\n            {\" \"}\n            Please provide the following details and documents in order to complete the KYC process.{\" \"}\n          </p>\n          <div className='row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4'>\n            <input\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              onBlur={() => checkInput(\"firstName\")}\n              type='text'\n              placeholder='First Name'\n              className={`user-inp ${\n                firstNameError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2`}\n            />\n            <input\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              onBlur={() => checkInput(\"lastName\")}\n              type='text'\n              placeholder='Last Name'\n              className={`user-inp ${\n                lastNameError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4`}\n            />\n            <input\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={() => checkInput(\"email\")}\n              type='text'\n              placeholder='E - mail'\n              className={`user-inp ${\n                emailError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4`}\n            />\n            <input\n              value={residence}\n              onChange={(e) => setResidence(e.target.value)}\n              onBlur={() => checkInput(\"residence\")}\n              type='text'\n              placeholder='Current Residence'\n              className={`user-inp ${\n                residenceError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`}\n            />\n\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              onBlur={() => checkInput(\"gender\")}\n              className={`user-inp ${\n                genderError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2`}>\n              <option className='p2' name='male' value={0}>\n                {\" \"}\n                Gender\n              </option>\n              <option className='p2' name='male' value='male'>\n                {\" \"}\n                Male\n              </option>\n              <option className='p2' name='female' value='female'>\n                Female\n              </option>\n            </select>\n\n            <PhoneInput\n              country={\"rs\"} //initial country\n              value={phone}\n              onChange={(phone) => setPhone(phone)}\n              onBlur={() => checkInput(\"phone\")}\n              containerClass={`user-phone ${\n                phoneError && \"border-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`}\n              inputClass='input'\n              dropdownClass='country-dropdown'\n            />\n\n            <div\n              className={`  ${\n                dateError && \"border-error\"\n              } user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2`}>\n             <label> <DatePicker\n                className='user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3'\n                placeholderText=\"Date of Birth\"\n                selected={date ? date : createDate()}\n                onChange={(date) => {\n                  setDate(date);\n                  checkInput(\"date\");\n                }}\n                maxDate={createDate()}\n                showMonthDropdown\n                showYearDropdown\n                yearDropdownItemNumber={85}\n                scrollableYearDropdown\n                placeholderText=\"Date of Birth\"\n                onCalendarClose={() => checkInput(\"date\")}\n              /></label>\n              <DatePicker\n                className='user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3'\n                placeholderText=\"Date of Birth\"\n                selected={date ? date : createDate()}\n                onChange={(date) => {\n                  setDate(date);\n                  checkInput(\"date\");\n                }}\n                maxDate={createDate()}\n                showMonthDropdown\n                showYearDropdown\n                yearDropdownItemNumber={85}\n                scrollableYearDropdown\n                placeholderText=\"Date of Birth\"\n                onCalendarClose={() => checkInput(\"date\")}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div className='user-proof row mb-5'>\n          <UserProof\n            img={identyImg}\n            setImg={(img) => setIdentyImg(img)}\n            checkboxName='identity'\n            heading='2. Proof of identity'\n            p1=' Upload one of the following documents: ID, Passport or Driving licence.'\n            p2=' The document must include your: Full name, date of birth and a photo of yourself.'\n            p3=' The photo should be clear and focused.'\n          />\n          <UserProof\n            img={addressImg}\n            setImg={(img) => setAddressImg(img)}\n            checkboxName='address'\n            heading='3. Proof of address'\n            p1=' Upload one of the following documents: bank statement or utility bill.'\n            p2=' Document must include your full name, adress and date.'\n            p3=' Must be within 3 months from the current date.'\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}