{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\n\nvar Overview = function Overview(props) {\n  var _useState = useState({\n    nodeCoverageStart: 0,\n    nodeCoverageEnd: 55,\n    one: false\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var progress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(start, end, name) {\n      var index, length;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              index = start, length = end;\n\n            case 1:\n              if (!(index < length)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, 25);\n              });\n\n            case 4:\n              setState(_defineProperty({}, name, index));\n\n            case 5:\n              index += 1;\n              _context.next = 1;\n              break;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function progress(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var startProgress = function startProgress() {\n    setState({\n      one: true\n    });\n    progress(state.nodeCoverageStart, state.nodeCoverageEnd, \"nodeCoverageStart\");\n  };\n\n  useEffect(function () {\n    if (props.inViewport === true && state.one === false) {\n      startProgress();\n    }\n\n    return function () {//   cleanup\n    };\n  }, [state, props.inViewport]);\n  var visible = props.inViewport ? \" is-visible\" : \"\";\n  return __jsx(\"div\", {\n    className: \"overview\",\n    ref: props.forwardedRef\n  }, __jsx(\"div\", {\n    className: \"overview-content col-10 col-xl-8\"\n  }, __jsx(\"h2\", {\n    className: \"fade-in-section-top\" + visible\n  }, \"Overview\"), __jsx(\"div\", {\n    className: \"overview-content-progress my-5\"\n  }, __jsx(\"div\", {\n    className: \"overview-content-progress--bar\",\n    style: {\n      width: state.nodeCoverageStart + \"%\"\n    }\n  })), __jsx(\"p\", {\n    className: \"fade-in-section\" + visible\n  }, \"Coming soon...\")));\n};\n\nexport default Overview;","map":null,"metadata":{},"sourceType":"module"}