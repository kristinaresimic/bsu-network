{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\"; // import PhoneInput from \"react-phone-number-input\";\n\nimport DatePicker from \"react-datepicker\"; // import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\n\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\nexport const User = () => {\n  const {\n    firstName,\n    lastName,\n    email,\n    residence,\n    gender,\n    phone,\n    date,\n    identyImg,\n    addressImg,\n    setLastName,\n    setFirstName,\n    setEmail,\n    setResidence,\n    setGender,\n    setPhone,\n    setDate,\n    setIdentyImg,\n    setAddressImg\n  } = useContext(DataContext);\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"en\");\n  const {\n    0: firstNameError,\n    1: setFirstNameError\n  } = useState(\"\");\n  const {\n    0: lastNameError,\n    1: setLastNameError\n  } = useState(\"\"); //email state\n  // const [email, setEmail] = useState(\"\");\n\n  const {\n    0: emailError,\n    1: setEmailError\n  } = useState(\"\");\n  const {\n    0: residenceError,\n    1: setResidenceError\n  } = useState(\"\");\n  const {\n    0: genderError,\n    1: setGenderError\n  } = useState(\"\");\n  const {\n    0: phoneError,\n    1: setPhoneError\n  } = useState(\"\"); //date state\n\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(\"\");\n  const {\n    0: dateError,\n    1: setDateError\n  } = useState(\"\"); //identity image state\n  //address image state\n\n  const emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const checkInput = input => {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n\n        break;\n\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n\n        break;\n\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n\n        break;\n\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n\n        break;\n\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n\n        break;\n\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n\n        break;\n\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n\n        break;\n    }\n  };\n\n  const createDate = () => {\n    // setDate(date);\n    const date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return __jsx(\"div\", {\n    className: \"user \"\n  }, __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(\"h5\", {\n    className: \"h5 fw-700\"\n  }, \"1. Basic Details:\"), __jsx(\"div\", {\n    className: \"ml-1 \"\n  }, __jsx(\"p\", {\n    className: \"p1 fw-500 col-xl-6\"\n  }, \" \", \"Please provide the following details and documents in order to complete the KYC process.\", \" \"), __jsx(\"div\", {\n    className: \"row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4\"\n  }, __jsx(\"input\", {\n    value: firstName,\n    onChange: e => setFirstName(e.target.value),\n    onBlur: () => checkInput(\"firstName\"),\n    type: \"text\",\n    placeholder: \"First Name\",\n    className: `user-inp ${firstNameError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2`\n  }), __jsx(\"input\", {\n    value: lastName,\n    onChange: e => setLastName(e.target.value),\n    onBlur: () => checkInput(\"lastName\"),\n    type: \"text\",\n    placeholder: \"Last Name\",\n    className: `user-inp ${lastNameError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4`\n  }), __jsx(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    onBlur: () => checkInput(\"email\"),\n    type: \"text\",\n    placeholder: \"E - mail\",\n    className: `user-inp ${emailError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4`\n  }), __jsx(\"input\", {\n    value: residence,\n    onChange: e => setResidence(e.target.value),\n    onBlur: () => checkInput(\"residence\"),\n    type: \"text\",\n    placeholder: \"Current Residence\",\n    className: `user-inp ${residenceError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`\n  }), __jsx(\"select\", {\n    value: gender,\n    onChange: e => setGender(e.target.value),\n    onBlur: () => checkInput(\"gender\"),\n    className: `user-inp ${genderError && \"user-inp-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2`\n  }, __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: 0\n  }, \" \", \"Gender\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: \"male\"\n  }, \" \", \"Male\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"female\",\n    value: \"female\"\n  }, \"Female\")), __jsx(PhoneInput, {\n    country: \"rs\" //initial country\n    ,\n    value: phone,\n    onChange: phone => setPhone(phone),\n    onBlur: () => checkInput(\"phone\"),\n    containerClass: `user-phone ${phoneError && \"border-error\"} col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`,\n    inputClass: \"input\",\n    dropdownClass: \"country-dropdown\"\n  }), __jsx(\"div\", {\n    className: `  ${dateError && \"border-error\"} user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2`\n  }, __jsx(DatePicker, {\n    className: \"user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3\",\n    placeholderText: \"Date of Birth\",\n    selected: date ? date : \"\",\n    onChange: date => {\n      setDate(date);\n      checkInput(\"date\");\n    },\n    maxDate: createDate(),\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    yearDropdownItemNumber: 85,\n    scrollableYearDropdown: true,\n    placeholderText: \"Date of Birth\",\n    onCalendarClose: () => checkInput(\"date\")\n  }))))), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"user-proof row mb-5\"\n  }, __jsx(UserProof, {\n    img: identyImg,\n    setImg: img => setIdentyImg(img),\n    checkboxName: \"identity\",\n    heading: \"2. Proof of identity\",\n    p1: \" Upload one of the following documents: ID, Passport or Driving licence.\",\n    p2: \" The document must include your: Full name, date of birth and a photo of yourself.\",\n    p3: \" The photo should be clear and focused.\"\n  }), __jsx(UserProof, {\n    img: addressImg,\n    setImg: img => setAddressImg(img),\n    checkboxName: \"address\",\n    heading: \"3. Proof of address\",\n    p1: \" Upload one of the following documents: bank statement or utility bill.\",\n    p2: \" Document must include your full name, adress and date.\",\n    p3: \" Must be within 3 months from the current date.\"\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}