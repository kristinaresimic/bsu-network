{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from \"react\";\nimport { ComposableMap, Geographies, Geography, ZoomableGroup } from \"react-simple-maps\";\nvar geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nvar rounded = function rounded(num) {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\n\nvar MapChart = function MapChart(_ref) {\n  var setTooltipContent = _ref.setTooltipContent;\n\n  var _useState = useState({\n    coordinates: [0, 0],\n    zoom: 1\n  }),\n      position = _useState[0],\n      setPosition = _useState[1];\n\n  var handleZoomIn = function handleZoomIn() {\n    if (position.zoom >= 4) return;\n    setPosition(function (pos) {\n      return _objectSpread(_objectSpread({}, pos), {}, {\n        zoom: pos.zoom * 2\n      });\n    });\n  };\n\n  var handleZoomOut = function handleZoomOut() {\n    if (position.zoom <= 1) return;\n    setPosition(function (pos) {\n      return _objectSpread(_objectSpread({}, pos), {}, {\n        zoom: pos.zoom / 2\n      });\n    });\n  };\n\n  var handleMoveEnd = function handleMoveEnd(position) {\n    setPosition(position);\n  };\n\n  var handleMoveStart = function handleMoveStart() {\n    setPosition(function (pos) {\n      return {\n        coordinates: [0, 0],\n        zoom: 2\n      };\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(ComposableMap, {\n    \"data-tip\": \"\",\n    projectionConfig: {\n      scale: 150\n    },\n    width: 800,\n    height: 400\n  }, __jsx(ZoomableGroup, {\n    disableZooming: true,\n    zoom: position.zoom,\n    center: position.coordinates,\n    onMoveEnd: handleMoveEnd // onMoveStart={handleMoveStart}\n\n  }, __jsx(Geographies, {\n    geography: geoUrl,\n    style: {\n      position: \"relative\"\n    }\n  }, function (_ref2) {\n    var geographies = _ref2.geographies;\n    return geographies.map(function (geo) {\n      return __jsx(Geography, {\n        key: geo.rsmKey,\n        geography: geo,\n        onMouseEnter: function onMouseEnter() {\n          var _geo$properties = geo.properties,\n              NAME = _geo$properties.NAME,\n              POP_EST = _geo$properties.POP_EST;\n          setTooltipContent(\"\".concat(NAME, \" \\u2014 \").concat(rounded(POP_EST)));\n        },\n        onMouseLeave: function onMouseLeave() {\n          setTooltipContent(\"\");\n        },\n        style: {\n          \"default\": {\n            fill: \"#0071bb\",\n            outline: \"none\"\n          },\n          hover: {\n            fill: \"#3c5dae\",\n            outline: \"none\"\n          },\n          pressed: {\n            fill: \"#fff\",\n            outline: \"none\"\n          }\n        }\n      });\n    });\n  }))), __jsx(\"div\", {\n    className: \"controls\"\n  }, __jsx(\"button\", {\n    onClick: handleZoomIn\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"#fff\",\n    strokeWidth: \"3\"\n  }, __jsx(\"line\", {\n    x1: \"12\",\n    y1: \"5\",\n    x2: \"12\",\n    y2: \"19\"\n  }), __jsx(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  }))), __jsx(\"button\", {\n    onClick: handleZoomOut\n  }, __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"#fff\",\n    strokeWidth: \"3\"\n  }, __jsx(\"line\", {\n    x1: \"5\",\n    y1: \"12\",\n    x2: \"19\",\n    y2: \"12\"\n  })))));\n};\n\nexport default /*#__PURE__*/memo(MapChart);","map":null,"metadata":{},"sourceType":"module"}