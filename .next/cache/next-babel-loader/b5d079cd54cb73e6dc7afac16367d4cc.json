{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/milos/KRISTINA/bsu-network-redesign/components/ModalComponents/User.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\"; // import PhoneInput from \"react-phone-number-input\";\n\nimport DatePicker from \"react-datepicker\"; // import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\n\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\nexport var User = function User() {\n  _s();\n\n  var _jsx;\n\n  var _useContext = useContext(DataContext),\n      firstName = _useContext.firstName,\n      lastName = _useContext.lastName,\n      email = _useContext.email,\n      residence = _useContext.residence,\n      gender = _useContext.gender,\n      phone = _useContext.phone,\n      date = _useContext.date,\n      identyImg = _useContext.identyImg,\n      addressImg = _useContext.addressImg,\n      setLastName = _useContext.setLastName,\n      setFirstName = _useContext.setFirstName,\n      setEmail = _useContext.setEmail,\n      setResidence = _useContext.setResidence,\n      setGender = _useContext.setGender,\n      setPhone = _useContext.setPhone,\n      setDate = _useContext.setDate,\n      setIdentyImg = _useContext.setIdentyImg,\n      setAddressImg = _useContext.setAddressImg;\n\n  var _useState = useState(\"en\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      firstNameError = _useState2[0],\n      setFirstNameError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      lastNameError = _useState3[0],\n      setLastNameError = _useState3[1]; //email state\n  // const [email, setEmail] = useState(\"\");\n\n\n  var _useState4 = useState(\"\"),\n      emailError = _useState4[0],\n      setEmailError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      residenceError = _useState5[0],\n      setResidenceError = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      genderError = _useState6[0],\n      setGenderError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      phoneError = _useState7[0],\n      setPhoneError = _useState7[1]; //date state\n\n\n  var _useState8 = useState(\"\"),\n      startDate = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      dateError = _useState9[0],\n      setDateError = _useState9[1]; //identity image state\n  //address image state\n\n\n  var emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  var checkInput = function checkInput(input) {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n\n        break;\n\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n\n        break;\n\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n\n        break;\n\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n\n        break;\n\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n\n        break;\n\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n\n        break;\n\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n\n        break;\n    }\n  };\n\n  var createDate = function createDate() {\n    // setDate(date);\n    var date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return __jsx(\"div\", {\n    className: \"user \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, __jsx(\"h5\", {\n    className: \"h5 fw-700\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"1. Basic Details:\"), __jsx(\"div\", {\n    className: \"ml-1 \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: \"p1 fw-500 col-xl-6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \" \", \"Please provide the following details and documents in order to complete the KYC process.\", \" \"), __jsx(\"div\", {\n    className: \"row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    value: firstName,\n    onChange: function onChange(e) {\n      return setFirstName(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"firstName\");\n    },\n    type: \"text\",\n    placeholder: \"First Name\",\n    className: \"user-inp \".concat(firstNameError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: lastName,\n    onChange: function onChange(e) {\n      return setLastName(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"lastName\");\n    },\n    type: \"text\",\n    placeholder: \"Last Name\",\n    className: \"user-inp \".concat(lastNameError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"email\");\n    },\n    type: \"text\",\n    placeholder: \"E - mail\",\n    className: \"user-inp \".concat(emailError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    value: residence,\n    onChange: function onChange(e) {\n      return setResidence(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"residence\");\n    },\n    type: \"text\",\n    placeholder: \"Current Residence\",\n    className: \"user-inp \".concat(residenceError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }), __jsx(\"select\", {\n    value: gender,\n    onChange: function onChange(e) {\n      return setGender(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"gender\");\n    },\n    className: \"user-inp \".concat(genderError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }\n  }, __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, \" \", \"Gender\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: \"male\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \" \", \"Male\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"female\",\n    value: \"female\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Female\")), __jsx(PhoneInput, {\n    country: \"rs\" //initial country\n    ,\n    value: phone,\n    onChange: function onChange(phone) {\n      return setPhone(phone);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"phone\");\n    },\n    containerClass: \"user-phone \".concat(phoneError && \"border-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4\"),\n    inputClass: \"input\",\n    dropdownClass: \"country-dropdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"  \".concat(dateError && \"border-error\", \" user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, __jsx(DatePicker, (_jsx = {\n    className: \"user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3\",\n    placeholder: \"Date of Birth\",\n    selected: date ? date : createDate(),\n    onChange: function onChange(date) {\n      setDate(date);\n      checkInput(\"date\");\n    },\n    maxDate: createDate(),\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    yearDropdownItemNumber: 85,\n    scrollableYearDropdown: true\n  }, _defineProperty(_jsx, \"placeholder\", \"Date of birth\"), _defineProperty(_jsx, \"onCalendarClose\", function onCalendarClose() {\n    return checkInput(\"date\");\n  }), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 15\n  }), _jsx)))))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"user-proof row mb-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, __jsx(UserProof, {\n    img: identyImg,\n    setImg: function setImg(img) {\n      return setIdentyImg(img);\n    },\n    checkboxName: \"identity\",\n    heading: \"2. Proof of identity\",\n    p1: \" Upload one of the following documents: ID, Passport or Driving licence.\",\n    p2: \" The document must include your: Full name, date of birth and a photo of yourself.\",\n    p3: \" The photo should be clear and focused.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }), __jsx(UserProof, {\n    img: addressImg,\n    setImg: function setImg(img) {\n      return setAddressImg(img);\n    },\n    checkboxName: \"address\",\n    heading: \"3. Proof of address\",\n    p1: \" Upload one of the following documents: bank statement or utility bill.\",\n    p2: \" Document must include your full name, adress and date.\",\n    p3: \" Must be within 3 months from the current date.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(User, \"iR5/PFKfT0cN23uIE7ORK3ImdKU=\");\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/milos/KRISTINA/bsu-network-redesign/components/ModalComponents/User.js"],"names":["React","useState","useContext","DatePicker","UserProof","PhoneInput","DataContext","createPopper","User","firstName","lastName","email","residence","gender","phone","date","identyImg","addressImg","setLastName","setFirstName","setEmail","setResidence","setGender","setPhone","setDate","setIdentyImg","setAddressImg","value","setValue","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","residenceError","setResidenceError","genderError","setGenderError","phoneError","setPhoneError","startDate","setStartDate","dateError","setDateError","emailReg","checkInput","input","test","toLowerCase","length","createDate","Date","setFullYear","getFullYear","e","target","img"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\n// import PhoneInput from \"react-phone-number-input\";\nimport DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\n\nexport const User = () => {\n  const {\n    firstName,\n    lastName,\n    email,\n    residence,\n    gender,\n    phone,\n    date,\n    identyImg,\n    addressImg,\n    setLastName,\n    setFirstName,\n    setEmail,\n    setResidence,\n    setGender,\n    setPhone,\n    setDate,\n    setIdentyImg,\n    setAddressImg,\n  } = useContext(DataContext);\n\n  const [value, setValue] = useState(\"en\");\n\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  //email state\n  // const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [residenceError, setResidenceError] = useState(\"\");\n  const [genderError, setGenderError] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n\n  //date state\n  const [startDate, setStartDate] = useState(\"\");\n  const [dateError, setDateError] = useState(\"\");\n\n  //identity image state\n\n  //address image state\n\n  const emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  const checkInput = (input) => {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n        break;\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n        break;\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n        break;\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n        break;\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n        break;\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n        break;\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n        break;\n    }\n  };\n\n  const createDate = () => {\n    // setDate(date);\n    const date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return (\n    <div className='user '>\n      <div className='mt-5'>\n        <h5 className='h5 fw-700'>1. Basic Details:</h5>\n        <div className='ml-1 '>\n          <p className='p1 fw-500 col-xl-6'>\n            {\" \"}\n            Please provide the following details and documents in order to complete the KYC process.{\" \"}\n          </p>\n          <div className='row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4'>\n            <input\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n              onBlur={() => checkInput(\"firstName\")}\n              type='text'\n              placeholder='First Name'\n              className={`user-inp ${\n                firstNameError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2`}\n            />\n            <input\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n              onBlur={() => checkInput(\"lastName\")}\n              type='text'\n              placeholder='Last Name'\n              className={`user-inp ${\n                lastNameError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4`}\n            />\n            <input\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={() => checkInput(\"email\")}\n              type='text'\n              placeholder='E - mail'\n              className={`user-inp ${\n                emailError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4`}\n            />\n            <input\n              value={residence}\n              onChange={(e) => setResidence(e.target.value)}\n              onBlur={() => checkInput(\"residence\")}\n              type='text'\n              placeholder='Current Residence'\n              className={`user-inp ${\n                residenceError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`}\n            />\n\n            <select\n              value={gender}\n              onChange={(e) => setGender(e.target.value)}\n              onBlur={() => checkInput(\"gender\")}\n              className={`user-inp ${\n                genderError && \"user-inp-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2`}>\n              <option className='p2' name='male' value={0}>\n                {\" \"}\n                Gender\n              </option>\n              <option className='p2' name='male' value='male'>\n                {\" \"}\n                Male\n              </option>\n              <option className='p2' name='female' value='female'>\n                Female\n              </option>\n            </select>\n\n            <PhoneInput\n              country={\"rs\"} //initial country\n              value={phone}\n              onChange={(phone) => setPhone(phone)}\n              onBlur={() => checkInput(\"phone\")}\n              containerClass={`user-phone ${\n                phoneError && \"border-error\"\n              } col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4`}\n              inputClass='input'\n              dropdownClass='country-dropdown'\n            />\n\n            <div\n              className={`  ${\n                dateError && \"border-error\"\n              } user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2`}>\n              <DatePicker\n                className='user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3'\n                placeholder=\"Date of Birth\"\n                \n                selected={date ? date : createDate()}\n                onChange={(date) => {\n                  setDate(date);\n                  checkInput(\"date\");\n                }}\n                maxDate={createDate()}\n                showMonthDropdown\n                showYearDropdown\n                yearDropdownItemNumber={85}\n                scrollableYearDropdown\n                placeholder='Date of birth'\n                onCalendarClose={() => checkInput(\"date\")}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div className='user-proof row mb-5'>\n          <UserProof\n            img={identyImg}\n            setImg={(img) => setIdentyImg(img)}\n            checkboxName='identity'\n            heading='2. Proof of identity'\n            p1=' Upload one of the following documents: ID, Passport or Driving licence.'\n            p2=' The document must include your: Full name, date of birth and a photo of yourself.'\n            p3=' The photo should be clear and focused.'\n          />\n          <UserProof\n            img={addressImg}\n            setImg={(img) => setAddressImg(img)}\n            checkboxName='address'\n            heading='3. Proof of address'\n            p1=' Upload one of the following documents: bank statement or utility bill.'\n            p2=' Document must include your full name, adress and date.'\n            p3=' Must be within 3 months from the current date.'\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}