{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\"; // import PhoneInput from \"react-phone-number-input\";\n\nimport DatePicker from \"react-datepicker\"; // import \"react-datepicker/dist/react-datepicker.scss\";\n// import 'react-phone-input-2/lib/style.css'\n\nimport \"../../styles/ModalStyles/phoneInput.scss\";\nimport { UserProof } from \"./UserProof\";\nimport PhoneInput from \"react-phone-input-2\";\nimport DataContext from \"../store/dataContext\";\nimport { createPopper } from \"@popperjs/core\";\nexport var User = function User() {\n  var _jsx;\n\n  var _useContext = useContext(DataContext),\n      firstName = _useContext.firstName,\n      lastName = _useContext.lastName,\n      email = _useContext.email,\n      residence = _useContext.residence,\n      gender = _useContext.gender,\n      phone = _useContext.phone,\n      date = _useContext.date,\n      identyImg = _useContext.identyImg,\n      addressImg = _useContext.addressImg,\n      setLastName = _useContext.setLastName,\n      setFirstName = _useContext.setFirstName,\n      setEmail = _useContext.setEmail,\n      setResidence = _useContext.setResidence,\n      setGender = _useContext.setGender,\n      setPhone = _useContext.setPhone,\n      setDate = _useContext.setDate,\n      setIdentyImg = _useContext.setIdentyImg,\n      setAddressImg = _useContext.setAddressImg;\n\n  var _useState = useState(\"en\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      firstNameError = _useState2[0],\n      setFirstNameError = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      lastNameError = _useState3[0],\n      setLastNameError = _useState3[1]; //email state\n  // const [email, setEmail] = useState(\"\");\n\n\n  var _useState4 = useState(\"\"),\n      emailError = _useState4[0],\n      setEmailError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      residenceError = _useState5[0],\n      setResidenceError = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      genderError = _useState6[0],\n      setGenderError = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      phoneError = _useState7[0],\n      setPhoneError = _useState7[1]; //date state\n\n\n  var _useState8 = useState(\"\"),\n      startDate = _useState8[0],\n      setStartDate = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      dateError = _useState9[0],\n      setDateError = _useState9[1]; //identity image state\n  //address image state\n\n\n  var emailReg = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n  var checkInput = function checkInput(input) {\n    switch (input) {\n      case \"firstName\":\n        if (firstName === \"\") {\n          setFirstNameError(\"Enter first name\");\n        } else {\n          setFirstNameError(\"\");\n        }\n\n        break;\n\n      case \"lastName\":\n        if (lastName === \"\") {\n          setLastNameError(\"Enter last name\");\n        } else {\n          setLastNameError(\"\");\n        }\n\n        break;\n\n      case \"email\":\n        if (email === \"\") {\n          setEmailError(\"Enter email\");\n        } else if (!emailReg.test(email.toLowerCase())) {\n          setEmailError(\"Enter valid email addres\");\n        } else {\n          setEmailError(\"\");\n        }\n\n        break;\n\n      case \"residence\":\n        if (residence === \"\") {\n          setResidenceError(\"Enter your current residence\");\n        } else {\n          setResidenceError(\"\");\n        }\n\n        break;\n\n      case \"gender\":\n        if (gender === 0 || gender === \"0\") {\n          setGenderError(\"Select your gender\");\n        } else {\n          setGenderError(\"\");\n        }\n\n        break;\n\n      case \"phone\":\n        if (phone.length <= 4) {\n          setPhoneError(\"Enter valid number\");\n        } else {\n          setPhoneError(\"\");\n        }\n\n        break;\n\n      case \"date\":\n        if (date === \"\") {\n          setDateError(\"Enter date of birth\");\n        } else {\n          setDateError(\"\");\n        }\n\n        break;\n    }\n  };\n\n  var createDate = function createDate() {\n    // setDate(date);\n    var date = new Date();\n    date.setFullYear(date.getFullYear() - 18);\n    return date;\n  };\n\n  return __jsx(\"div\", {\n    className: \"user \"\n  }, __jsx(\"div\", {\n    className: \"mt-5\"\n  }, __jsx(\"h5\", {\n    className: \"h5 fw-700\"\n  }, \"1. Basic Details:\"), __jsx(\"div\", {\n    className: \"ml-1 \"\n  }, __jsx(\"p\", {\n    className: \"p1 fw-500 col-xl-6\"\n  }, \" \", \"Please provide the following details and documents in order to complete the KYC process.\", \" \"), __jsx(\"div\", {\n    className: \"row col-12 col-md-12 col-lg-12  col-xl-10 m-0 p-0 mt-3 ml-4\"\n  }, __jsx(\"input\", {\n    value: firstName,\n    onChange: function onChange(e) {\n      return setFirstName(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"firstName\");\n    },\n    type: \"text\",\n    placeholder: \"First Name\",\n    className: \"user-inp \".concat(firstNameError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mr-4 mt-2\")\n  }), __jsx(\"input\", {\n    value: lastName,\n    onChange: function onChange(e) {\n      return setLastName(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"lastName\");\n    },\n    type: \"text\",\n    placeholder: \"Last Name\",\n    className: \"user-inp \".concat(lastNameError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2  mr-4\")\n  }), __jsx(\"input\", {\n    value: email,\n    onChange: function onChange(e) {\n      return setEmail(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"email\");\n    },\n    type: \"text\",\n    placeholder: \"E - mail\",\n    className: \"user-inp \".concat(emailError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey  mt-2 mr-4\")\n  }), __jsx(\"input\", {\n    value: residence,\n    onChange: function onChange(e) {\n      return setResidence(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"residence\");\n    },\n    type: \"text\",\n    placeholder: \"Current Residence\",\n    className: \"user-inp \".concat(residenceError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4\")\n  }), __jsx(\"select\", {\n    value: gender,\n    onChange: function onChange(e) {\n      return setGender(e.target.value);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"gender\");\n    },\n    className: \"user-inp \".concat(genderError && \"user-inp-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 mr-4 ml-0 c-grey mt-2\")\n  }, __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: 0\n  }, \" \", \"Gender\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"male\",\n    value: \"male\"\n  }, \" \", \"Male\"), __jsx(\"option\", {\n    className: \"p2\",\n    name: \"female\",\n    value: \"female\"\n  }, \"Female\")), __jsx(PhoneInput, {\n    country: \"rs\" //initial country\n    ,\n    value: phone,\n    onChange: function onChange(phone) {\n      return setPhone(phone);\n    },\n    onBlur: function onBlur() {\n      return checkInput(\"phone\");\n    },\n    containerClass: \"user-phone \".concat(phoneError && \"border-error\", \" col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 p2 c-grey mt-2 mr-4\"),\n    inputClass: \"input\",\n    dropdownClass: \"country-dropdown\"\n  }), __jsx(\"div\", {\n    className: \"  \".concat(dateError && \"border-error\", \" user-inp d-flex col-10 col-sm-6 col-md-5 col-lg-3 col-xl-3 m-0 p-0 mt-2\")\n  }, __jsx(DatePicker, (_jsx = {\n    className: \"user-inp-date border-0 p2 c-grey  mr-4 pl-4 pl-lg-3\",\n    placeholderText: \"Date of Birth\",\n    selected: date ? date : \"\",\n    onChange: function onChange(date) {\n      setDate(date);\n      checkInput(\"date\");\n    },\n    maxDate: createDate(),\n    showMonthDropdown: true,\n    showYearDropdown: true,\n    yearDropdownItemNumber: 85,\n    scrollableYearDropdown: true\n  }, _defineProperty(_jsx, \"placeholderText\", \"Date of Birth\"), _defineProperty(_jsx, \"onCalendarClose\", function onCalendarClose() {\n    return checkInput(\"date\");\n  }), _jsx)))))), __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"user-proof row mb-5\"\n  }, __jsx(UserProof, {\n    img: identyImg,\n    setImg: function setImg(img) {\n      return setIdentyImg(img);\n    },\n    checkboxName: \"identity\",\n    heading: \"2. Proof of identity\",\n    p1: \" Upload one of the following documents: ID, Passport or Driving licence.\",\n    p2: \" The document must include your: Full name, date of birth and a photo of yourself.\",\n    p3: \" The photo should be clear and focused.\"\n  }), __jsx(UserProof, {\n    img: addressImg,\n    setImg: function setImg(img) {\n      return setAddressImg(img);\n    },\n    checkboxName: \"address\",\n    heading: \"3. Proof of address\",\n    p1: \" Upload one of the following documents: bank statement or utility bill.\",\n    p2: \" Document must include your full name, adress and date.\",\n    p3: \" Must be within 3 months from the current date.\"\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}